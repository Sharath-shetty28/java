#include<iostream>
using namespace std;

struct Process {
    int pid, at, bt, ct, wt, tat;
};

int main() {
    int n;
    cout << "Enter number of processes: ";
    cin >> n;

    Process p[100];

    for (int i = 0; i < n; i++) {
        p[i].pid = i + 1;
        cout << "Enter Arrival Time and Burst Time for P" << p[i].pid << ": ";
        cin >> p[i].at >> p[i].bt;
    }

    // Sort manually by Arrival Time (simple selection sort)
    for (int i = 0; i < n - 1; i++) {
        for (int j = i + 1; j < n; j++) {
            if (p[j].at < p[i].at) {
                // Manual swap
                Process temp = p[i];
                p[i] = p[j];
                p[j] = temp;
            }
        }
    }

    // First process
    p[0].ct = p[0].at + p[0].bt;
    p[0].tat = p[0].ct - p[0].at;
    p[0].wt = p[0].tat - p[0].bt;

    for (int i = 1; i < n; i++) {
        if (p[i].at > p[i - 1].ct)
            p[i].ct = p[i].at + p[i].bt; // CPU idle
        else
            p[i].ct = p[i - 1].ct + p[i].bt;

        p[i].tat = p[i].ct - p[i].at;
        p[i].wt = p[i].tat - p[i].bt;
    }

    float totalWT = 0, totalTAT = 0;
    cout << "\nPId\tAT\tBT\tCT\tTAT\tWT\n";
    for (int i = 0; i < n; i++) {
        cout << "P" << p[i].pid << "\t" << p[i].at << "\t" << p[i].bt << "\t"
             << p[i].ct << "\t" << p[i].tat << "\t" << p[i].wt << endl;
        totalWT += p[i].wt;
        totalTAT += p[i].tat;
    }

    cout << "\nAverage Waiting Time: " << (totalWT / n);
    cout << "\nAverage Turnaround Time: " << (totalTAT / n) << endl;

    return 0;
}
